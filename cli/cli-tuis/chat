#!/usr/bin/env python3.11

# Copyright (c) 2024-2025 enamentis GmbH. All rights reserved.
#
# This software module is the proprietary property of enamentis GmbH.
# Unauthorized copying, modification, distribution, or use of this software
# is strictly prohibited unless explicitly authorized in writing.
# 
# THIS SOFTWARE IS PROVIDED "AS IS," WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES, OR OTHER LIABILITY ARISING FROM THE USE OF THIS SOFTWARE.
# 
# For more details, check the LICENSE file in the root directory of this repository.

# System imports
import ast

# From package imports
from teatype.cli import BaseTUI
from teatype.enum import EscapeColor
from teatype.io import clear_shell, env, file, path, shell
from teatype.logging import hint, log, println, warn, success

DEFAULT_MODEL_PATH = ''
MANUAL_REFRESH = False # If True, the shell will be cleared automatically after each command
DEBUG_MODE = False

class Chat(BaseTUI):
    def meta(self):
        return {
            'name': 'chat',
            'shorthand': 'ch',
            'help': 'Chat with a local LLM model',
        }

    def run(self):
        println()
        
        parent_directory = path.caller_parent(reverse_depth=2)
        cli_dist_directory = path.join(parent_directory, 'dist')
        model_directory = path.join(cli_dist_directory, 'llm-models')
        conversational_model_directory = path.join(model_directory, 'conversational')
        if not path.exists(conversational_model_directory):
            warn(f'Conversational model directory not found at {conversational_model_directory}. Creating it. Please re-run this script after placing your model there.',
                 use_prefix=False)
            path.create(conversational_model_directory)
            println()
            return
        
if __name__ == '__main__':
    Chat()