[
    {
        "name": "pb",
        "description": "Build a python package",
        "cmd": "python3.11 setup.py sdist bdist_wheel"
    },
    {
        "name": "pf",
        "description": "Freeze all installed python packages",
        "cmd": "python3.11 -m pip freeze"
    },
    {
        "name": "pfo",
        "description": "Freeze all installed python packages and output to a requirements file in the current directory",
        "cmd": "python3.11 -m pip freeze > requirements.txt"
    },
    {
        "name": "pi",
        "description": "Install a python package for the baseline interpreter",
        "cmd": "python3.11 -m pip install"
    },
    {
        "name": "pie",
        "description": "Install a python package in editable mode",
        "cmd": "python3.11 -m pip install -e ."
    },
    {
        "name": "pir",
        "description": "Install all python packages in the specified .txt file",
        "cmd": "python3.11 -m pip install -r"
    },
    {
        "name": "pl",
        "description": "View the installed python packages in a more detailed format",
        "cmd": "python3.11 -m pip list --format=columns"
    },
    {
        "name": "pt",
        "description": "Run pytest with the specified arguments",
        "cmd": "python3.11 -m pytest -s -rf --disable-warnings --tb=native --showlocals --color=yes --maxfail=1"
    },
    {
        "name": "ptr",
        "description": "Run pytest periodically with a passed argument interval in seconds",
        "func": [
            "while true; do clear; python3.11 -m pytest -s -rf --disable-warnings --tb=native --showlocals --color=yes --maxfail=1; sleep $1; done"
        ]
    },
    {
        "name": "pv",
        "description": "Activate the first python virtual environment found in the directory",
        "func": [
            "dir=\"${1:-.}\"",
            "local venv_dir",
            "venv_dir=$(find \"$dir\" -type d -name '*venv' | head -n 1)",
            "if [ -n \"$venv_dir\" ]; then",
            "    . \"$venv_dir/bin/activate\" && echo \"Activated virtual environment: $venv_dir\"",
            "else",
            "    echo \"No 'venv' directory found.\"",
            "    return 1",
            "fi"
        ]
    },
    {
        "name": "pvc",
        "description": "Create a python virtual environment with the given name",
        "func": [
            "if [ -z \"$1\" ]; then",
            "    echo \"Usage: pvc <env_name>\"",
            "    return 1",
            "fi",
            "local env_name=\"$1\"",
            "if [ -d \"$env_name\" ]; then",
            "    echo \"Directory \"$env_name\" already exists.\"",
            "    return 1",
            "fi",
            "python3.11 -m venv \"$env_name\" && echo \"Virtual environment '$env_name' created.\""
        ]
    },
    {
        "name": "pvd",
        "description": "Deactivate the current virtual environment",
        "cmd": "deactivate"
    },
    {
        "name": "py",
        "description": "Run a python script with the baseline interpreter",
        "cmd": "python3.11"
    }
]
